<!-- 
Embed this file on your site using:
<iframe src="https://yourusername.github.io/Bike-Racing-RSJ/index.html" width="100%" height="800" style="border:none;"></iframe>
-->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <meta name="description" content="Stunt Horizon - Dirt Bike Adventure for kids. Enjoy 100 levels of exciting dirt bike stunts on your Google Blog or Website!"/>
  <title>Stunt Horizon - Dirt Bike Adventure</title>
  <!-- Phaser 3 Library -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/phaser/3.60.0/phaser.min.js"></script>
  <style>
    /* Global Styles */
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background: #222;
      color: #fff;
      text-align: center;
    }
    h2 {
      margin: 10px;
    }
    /* Game Container */
    #game-container {
      position: relative;
      width: 100%;
      max-width: 720px;
      height: 1280px;
      margin: auto;
      background: #000;
    }
    /* Responsive Scaling for Mobile */
    @media (max-width: 720px) {
      #game-container {
        width: 100%;
        height: calc(100vw * (1280 / 720));
      }
    }
    /* Control Buttons */
    #controls {
      position: absolute;
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
      z-index: 2;
    }
    #controls button {
      background: #3498db;
      border: none;
      padding: 10px 20px;
      margin: 5px;
      color: #fff;
      font-size: 16px;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s;
    }
    #controls button:hover {
      background: #2980b9;
    }
    /* Start Screen Overlay */
    #start-screen {
      position: absolute;
      top: 0;
      left: 0;
      width: 720px;
      height: 1280px;
      background: rgba(0, 0, 0, 0.85);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      z-index: 3;
      padding: 20px;
      box-sizing: border-box;
    }
    @media (max-width: 720px) {
      #start-screen {
        width: 100%;
        height: calc(100vw * (1280 / 720));
      }
    }
    #start-screen h1 {
      font-size: 48px;
      margin-bottom: 20px;
      text-align: center;
    }
    #start-screen p {
      font-size: 20px;
      text-align: center;
      margin-bottom: 30px;
    }
    #start-screen button {
      background: #e74c3c;
      border: none;
      padding: 15px 30px;
      font-size: 20px;
      color: #fff;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s;
    }
    #start-screen button:hover {
      background: #c0392b;
    }
  </style>
</head>
<body>
  <h2>Stunt Horizon - Dirt Bike Adventure</h2>
  <div id="game-container">
    <!-- Start Screen Overlay -->
    <div id="start-screen">
      <h1>Welcome to Stunt Horizon!</h1>
      <p>
        Ride your dirt bike through 100 fun and challenging levels!<br>
        Use arrow keys (or tap on mobile) to move and jump. Enjoy the ride!
      </p>
      <button onclick="startGame()">Let's Ride!</button>
    </div>
    <!-- Control Buttons -->
    <div id="controls">
      <button onclick="restartGame()">Restart</button>
      <button onclick="toggleSound()">Toggle Sound</button>
    </div>
  </div>
  <script>
    var game;
    var soundEnabled = true;

    var config = {
      type: Phaser.AUTO,
      width: 720,
      height: 1280,
      parent: 'game-container',
      physics: {
        default: 'arcade',
        arcade: { gravity: { y: 500 }, debug: false }
      },
      scene: []
    };

    // Base Level Class
    class BaseLevel extends Phaser.Scene {
      constructor(key, difficulty) {
        super({ key });
        this.levelKey = key;
        this.nextLevel = `Level${parseInt(key.replace('Level', '')) + 1}`;
        this.difficulty = difficulty;
      }
      preload() {
        this.load.image('background', 'https://i.imgur.com/9YxjbZa.png');
        this.load.image('ground', 'https://i.imgur.com/6n3P56M.png');
        this.load.image('bike', 'https://i.imgur.com/Zh5ET7m.png');
        this.load.image('flag', 'https://i.imgur.com/KtTBRhe.png');
        this.load.image('obstacle', 'https://i.imgur.com/N7kGdp7.png');
        this.load.audio('jump', 'https://www.myinstants.com/media/sounds/jump.mp3');
      }
      create() {
        // Background
        this.add.image(360, 640, 'background').setScale(2);

        // Ground
        var ground = this.physics.add.staticGroup();
        ground.create(360, 1240, 'ground').setScale(2).refreshBody();

        // Player Bike
        this.bike = this.physics.add.sprite(100, 1100, 'bike');
        this.bike.setBounce(0.2);
        this.bike.setCollideWorldBounds(true);

        // Goal Flag
        this.flag = this.physics.add.sprite(650, 1100, 'flag');
        this.flag.setCollideWorldBounds(true);

        // Obstacles (increase with difficulty)
        this.obstacles = this.physics.add.group();
        for (let i = 0; i < this.difficulty * 2; i++) {
          let x = Phaser.Math.Between(200, 600);
          let y = Phaser.Math.Between(900, 1200);
          this.obstacles.create(x, y, 'obstacle').setImmovable(true);
        }

        // Collisions & Overlaps
        this.physics.add.collider(this.bike, ground);
        this.physics.add.collider(this.bike, this.obstacles);
        this.physics.add.overlap(this.bike, this.flag, () => {
          if (this.nextLevel && this.scene.get(this.nextLevel)) {
            this.scene.start(this.nextLevel);
          } else {
            alert('Congratulations! You completed all levels! Restarting game.');
            restartGame();
          }
        }, null, this);

        // Sound
        this.jumpSound = this.sound.add('jump');

        // Keyboard Controls
        this.cursors = this.input.keyboard.createCursorKeys();
      }
      update() {
        if (this.cursors.left.isDown) {
          this.bike.setVelocityX(-160);
        } else if (this.cursors.right.isDown) {
          this.bike.setVelocityX(160);
        } else {
          this.bike.setVelocityX(0);
        }
        if (this.cursors.up.isDown && this.bike.body.touching.down) {
          this.bike.setVelocityY(-400);
          if (soundEnabled) this.jumpSound.play();
        }
      }
    }

    // Create 100 Levels with Progressive Difficulty
    for (let i = 1; i <= 100; i++) {
      let difficulty = Math.ceil(i / 10);
      window[`Level${i}`] = class extends BaseLevel {
        constructor() {
          super(`Level${i}`, difficulty);
        }
      };
      config.scene.push(window[`Level${i}`]);
    }

    // Start the Game
    function startGame() {
      document.getElementById('start-screen').style.display = 'none';
      if (!game) {
        game = new Phaser.Game(config);
      } else {
        game.scene.start('Level1');
      }
    }

    // Restart the Game
    function restartGame() {
      if (game) {
        game.destroy(true);
      }
      game = new Phaser.Game(config);
      document.getElementById('start-screen').style.display = 'none';
    }

    // Toggle Sound
    function toggleSound() {
      soundEnabled = !soundEnabled;
      alert('Sound ' + (soundEnabled ? 'Enabled' : 'Disabled'));
    }
  </script>
</body>
</html>
